onEvent('recipes', event => {
	const ORETYPE={
		COPPER: 			{NAME: 'COPPER', 			CHANCE: [0.25,0.20,0.15,0.10]},
		GOLD: 				{NAME: 'GOLD', 				CHANCE: [0.25,0.20,0.15,0.10]},
		HEMATITE: 			{NAME: 'HEMATITE', 			CHANCE: [0.25,0.20,0.15,0.10]},
		CASSITERITE: 		{NAME: 'CASSITERITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		BISMUTHINITE: 		{NAME: 'BISMUTHINITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		GARNIERITE: 		{NAME: 'GARNIERITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		SILVER: 			{NAME: 'SILVER', 			CHANCE: [0.25,0.20,0.15,0.10]},
		SPHALERITE: 		{NAME: 'SPHALERITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		TETRAHEDRITE: 		{NAME: 'TETRAHEDRITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		MALACHITE: 			{NAME: 'MALACHITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		MAGNETITE: 			{NAME: 'MAGNETITE', 		CHANCE: [0.25,0.20,0.15,0.10]},
		LIMONITE: 			{NAME: 'LIMONITE', 			CHANCE: [0.25,0.20,0.15,0.10]},
		CINNABAR: 			{NAME: 'CINNABAR', 			CHANCE: [0.50]},
		SULFUR: 			{NAME: 'SULFUR', 			CHANCE: [0.50]},
		EMERALD: 			{NAME: 'EMERALD', 			CHANCE: [0.50]},
		TOPAZ: 				{NAME: 'TOPAZ', 			CHANCE: [0.50]},
		CRYOLITE: 			{NAME: 'CRYOLITE', 			CHANCE: [0.50]},
		GYPSUM: 			{NAME: 'GYPSUM', 			CHANCE: [0.50]},
		LAPIS: 				{NAME: 'LAPIS', 			CHANCE: [0.50]},
		OPAL: 				{NAME: 'OPAL', 				CHANCE: [0.50]},
		GRAPHITE: 			{NAME: 'GRAPHITE', 			CHANCE: [0.25]},
		KIMBERLITE: 		{NAME: 'DIAMOND', 			CHANCE: [0.25]},
		BITUMINUOS_COAL:	{NAME: 'BITUMINUOS_COAL', 	CHANCE: [0.50]},
		LIGNITE:			{NAME: 'LIGNITE', 			CHANCE: [0.50]},
		KAOLINITE:			{NAME: 'KAOLINITE', 		CHANCE: [0.50]},
		SALTPETER:			{NAME: 'SALTPETER', 		CHANCE: [0.50]},
		HALITE:				{NAME: 'HALITE', 			CHANCE: [0.50]},
		RUBIES:				{NAME: 'RUBIES', 			CHANCE: [0.50]},
		SYLVITE:			{NAME: 'SYLVITE', 			CHANCE: [0.50]},
		BORAX:				{NAME: 'BORAX', 			CHANCE: [0.50]}
	}
	const recipes=[		
		{INPUT : GRAVELS.RHYOLITE,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE, ORETYPE.CINNABAR, ORETYPE.SULFUR], KEY:'gravel/rhyolite'},
		{INPUT : GRAVELS.BASALT,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE, ORETYPE.CINNABAR, ORETYPE.SULFUR], KEY:'gravel/basalt'},
		{INPUT : GRAVELS.ANDESITE,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE, ORETYPE.CINNABAR, ORETYPE.SULFUR], KEY:'gravel/andesite'},
		{INPUT : GRAVELS.DACITE,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE, ORETYPE.CINNABAR, ORETYPE.SULFUR], KEY:'gravel/dacite'},		
		
		{INPUT : GRAVELS.GRANITE, 		RESULTS: [ORETYPE.GOLD, ORETYPE.CASSITERITE, ORETYPE.BISMUTHINITE, ORETYPE.GARNIERITE, ORETYPE.SULFUR, ORETYPE.EMERALD, ORETYPE.SILVER, ORETYPE.TOPAZ, ORETYPE.CRYOLITE], KEY:'gravel/granite'},
		{INPUT : GRAVELS.DIORITE, 		RESULTS: [ORETYPE.GOLD, ORETYPE.CASSITERITE, ORETYPE.BISMUTHINITE, ORETYPE.GARNIERITE, ORETYPE.SULFUR, ORETYPE.EMERALD], KEY:'gravel/diorite'},
		{INPUT : GRAVELS.GABRO, 		RESULTS: [ORETYPE.GOLD, ORETYPE.CASSITERITE, ORETYPE.BISMUTHINITE, ORETYPE.GARNIERITE, ORETYPE.SULFUR, ORETYPE.EMERALD, ORETYPE.KIMBERLITE], KEY:'gravel/gabbro'},
		
		{INPUT : GRAVELS.QUARTZITE,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.GYPSUM, ORETYPE.GRAPHITE, ORETYPE.CINNABAR, ORETYPE.OPAL], KEY:'gravel/quartzite'},
		{INPUT : GRAVELS.SLATE,			RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.GYPSUM], KEY:'gravel/slate'},
		{INPUT : GRAVELS.PHYLLITE,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.GYPSUM, ORETYPE.MALACHITE], KEY:'gravel/phyllite'},
		{INPUT : GRAVELS.SCHIST,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.GYPSUM, ORETYPE.GRAPHITE], KEY:'gravel/schist'},
		{INPUT : GRAVELS.GNEISS,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.GYPSUM, ORETYPE.GRAPHITE], KEY:'gravel/gneiss'},
		{INPUT : GRAVELS.MARBLE,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.GYPSUM, ORETYPE.MALACHITE, ORETYPE.GRAPHITE, ORETYPE.LAPIS], KEY:'gravel/marble'},
		
		{INPUT : GRAVELS.SHALE,			RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE, ORETYPE.RUBIES, ORETYPE.CINNABAR, ORETYPE.SYLVITE, ORETYPE.BORAX], KEY:'gravel/shale'},
		{INPUT : GRAVELS.CLAYSTONE,		RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE, ORETYPE.SYLVITE, ORETYPE.BORAX], KEY:'gravel/claystone'},
		{INPUT : GRAVELS.LIMESTONE,		RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE, ORETYPE.MALACHITE, ORETYPE.GYPSUM, ORETYPE.RUBIES, ORETYPE.BORAX, ORETYPE.LAPIS], KEY:'gravel/limestone'},
		{INPUT : GRAVELS.CONGLOMERATE,	RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE], KEY:'gravel/conglomerate'},
		{INPUT : GRAVELS.DOLOMITE,		RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE, ORETYPE.MALACHITE], KEY:'gravel/dolomite'},
		{INPUT : GRAVELS.CHERT,			RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE, ORETYPE.SYLVITE], KEY:'gravel/chert'},
		{INPUT : GRAVELS.CHALK,			RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.KAOLINITE, ORETYPE.SALTPETER, ORETYPE.HALITE, ORETYPE.MALACHITE], KEY:'gravel/chalk'}
	]

	event.remove({type : RECIPE_TYPE.C_SPLASHING})
	recipes.forEach(recipe=>{	
		let RESULT=[]
		recipe.RESULTS.forEach(res=>{
			if(res.CHANCE.length>1){
				console.log(res)
				RESULT.push({item : ORES.RICH[res.NAME], 		chance :  res.CHANCE[0]})
				RESULT.push({item : ORES.NORMAL[res.NAME], 	chance :  res.CHANCE[1]})
				RESULT.push({item : ORES.POOR[res.NAME], 		chance :  res.CHANCE[2]})
				RESULT.push({item : ORES.SMALL[res.NAME], 		chance :  res.CHANCE[3]})
			}else{
				RESULT.push({item : ORES.PRECIOUS[res.NAME], 	chance :  res.CHANCE[0]})
			}
		})
		event.custom({
			type: RECIPE_TYPE.C_SPLASHING,
			ingredients: [
				Id_or_tag_to_item(recipe.INPUT)
			],
			results: RESULT
		}).id(`create:splashing/${recipe.KEY}`)
	})
})