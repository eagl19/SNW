onEvent('recipes', event => {
	const ORETYPE={
		COPPER: 			{NAME: 'COPPER', 			CHANCE: 0.250},
		GOLD: 				{NAME: 'GOLD', 				CHANCE: 0.250},
		HEMATITE: 			{NAME: 'HEMATITE', 			CHANCE: 0.250},
		CASSITERITE: 		{NAME: 'CASSITERITE', 		CHANCE: 0.250},
		BISMUTHINITE: 		{NAME: 'BISMUTHINITE', 		CHANCE: 0.250},
		GARNIERITE: 		{NAME: 'GARNIERITE', 		CHANCE: 0.250},
		SILVER: 			{NAME: 'SILVER', 			CHANCE: 0.250},
		SPHALERITE: 		{NAME: 'SPHALERITE', 		CHANCE: 0.250},
		TETRAHEDRITE: 		{NAME: 'TETRAHEDRITE', 		CHANCE: 0.250},
		MALACHITE: 			{NAME: 'MALACHITE', 		CHANCE: 0.250},
		MAGNETITE: 			{NAME: 'MAGNETITE', 		CHANCE: 0.250},
		LIMONITE: 			{NAME: 'LIMONITE', 			CHANCE: 0.250},
		CINNABAR: 			{NAME: 'CINNABAR', 			CHANCE: 0.250},
		SULFUR: 			{NAME: 'SULFUR', 			CHANCE: 0.250},
		EMERALD: 			{NAME: 'EMERALD', 			CHANCE: 0.250},
		TOPAZ: 				{NAME: 'TOPAZ', 			CHANCE: 0.250},
		CRYOLITE: 			{NAME: 'CRYOLITE', 			CHANCE: 0.250},
		GYPSUM: 			{NAME: 'GYPSUM', 			CHANCE: 0.250},
		LAPIS: 				{NAME: 'LAPIS', 			CHANCE: 0.250},
		OPAL: 				{NAME: 'OPAL', 				CHANCE: 0.250},
		GRAPHITE: 			{NAME: 'GRAPHITE', 			CHANCE: 0.125},
		KIMBERLITE: 		{NAME: 'DIAMOND', 			CHANCE: 0.125},
		BITUMINUOS_COAL:	{NAME: 'BITUMINUOS_COAL', 	CHANCE: 0.250},
		LIGNITE:			{NAME: 'LIGNITE', 			CHANCE: 0.250},
		KAOLINITE:			{NAME: 'KAOLINITE', 		CHANCE: 0.125},
		SALTPETER:			{NAME: 'SALTPETER', 		CHANCE: 0.250},
		HALITE:				{NAME: 'HALITE', 			CHANCE: 0.250},
		RUBIES:				{NAME: 'RUBIES', 			CHANCE: 0.250},
		SYLVITE:			{NAME: 'SYLVITE', 			CHANCE: 0.250},
		BORAX:				{NAME: 'BORAX', 			CHANCE: 0.250},
		AMETHYST:			{NAME: 'AMETHYST', 			CHANCE: 0.250}
	}
	const recipes=[		
		{INPUT : GRAVELS.RHYOLITE,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE], KEY:'gravel/rhyolite'},
		{INPUT : GRAVELS.BASALT,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE], KEY:'gravel/basalt'},
		{INPUT : GRAVELS.ANDESITE,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE], KEY:'gravel/andesite'},
		{INPUT : GRAVELS.DACITE,		RESULTS: [ORETYPE.COPPER, ORETYPE.GOLD, ORETYPE.HEMATITE], KEY:'gravel/dacite'},		
		
		{INPUT : GRAVELS.GRANITE, 		RESULTS: [ORETYPE.GOLD, ORETYPE.CASSITERITE, ORETYPE.BISMUTHINITE, ORETYPE.GARNIERITE, ORETYPE.SILVER, ORETYPE.TOPAZ], KEY:'gravel/granite'},
		{INPUT : GRAVELS.DIORITE, 		RESULTS: [ORETYPE.GOLD, ORETYPE.CASSITERITE, ORETYPE.BISMUTHINITE, ORETYPE.GARNIERITE], KEY:'gravel/diorite'},
		{INPUT : GRAVELS.GABRO, 		RESULTS: [ORETYPE.GOLD, ORETYPE.CASSITERITE, ORETYPE.BISMUTHINITE, ORETYPE.GARNIERITE], KEY:'gravel/gabbro'},
		
		{INPUT : GRAVELS.QUARTZITE,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE], KEY:'gravel/quartzite'},
		{INPUT : GRAVELS.SLATE,			RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE], KEY:'gravel/slate'},
		{INPUT : GRAVELS.PHYLLITE,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.MALACHITE], KEY:'gravel/phyllite'},
		{INPUT : GRAVELS.SCHIST,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE], KEY:'gravel/schist'},
		{INPUT : GRAVELS.GNEISS,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE], KEY:'gravel/gneiss'},
		{INPUT : GRAVELS.MARBLE,		RESULTS: [ORETYPE.SILVER, ORETYPE.SPHALERITE, ORETYPE.TETRAHEDRITE, ORETYPE.MALACHITE], KEY:'gravel/marble'},
		
		{INPUT : GRAVELS.SHALE,			RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE], KEY:'gravel/shale'},
		{INPUT : GRAVELS.CLAYSTONE,		RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE], KEY:'gravel/claystone'},
		{INPUT : GRAVELS.LIMESTONE,		RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.MALACHITE], KEY:'gravel/limestone'},
		{INPUT : GRAVELS.CONGLOMERATE,	RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE], KEY:'gravel/conglomerate'},
		{INPUT : GRAVELS.DOLOMITE,		RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE, ORETYPE.MALACHITE], KEY:'gravel/dolomite'},
		{INPUT : GRAVELS.CHERT,			RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE], KEY:'gravel/chert'},
		{INPUT : GRAVELS.CHALK,			RESULTS: [ORETYPE.BISMUTHINITE, ORETYPE.MAGNETITE, ORETYPE.LIMONITE, ORETYPE.BITUMINUOS_COAL, ORETYPE.LIGNITE,  ORETYPE.MALACHITE], KEY:'gravel/chalk'},
		
		{INPUT : SANDS.BROWN,			RESULTS: [ORETYPE.AMETHYST, ORETYPE.EMERALD, 	ORETYPE.KAOLINITE, ORETYPE.OPAL, 	  ORETYPE.SALTPETER, ORETYPE.SULFUR,  ORETYPE.CINNABAR,  ORETYPE.CRYOLITE, ORETYPE.GYPSUM, ORETYPE.HALITE], KEY:'sand/brown'},
		{INPUT : SANDS.WHITE,			RESULTS: [ORETYPE.AMETHYST, ORETYPE.EMERALD, 	ORETYPE.GRAPHITE,  ORETYPE.KAOLINITE, ORETYPE.LAPIS, 	 ORETYPE.OPAL, 	  ORETYPE.SALTPETER, ORETYPE.CINNABAR, ORETYPE.GYPSUM, ORETYPE.HALITE], KEY:'sand/white'},
		{INPUT : SANDS.BLACK,			RESULTS: [ORETYPE.AMETHYST, ORETYPE.KAOLINITE,  ORETYPE.OPAL, 	   ORETYPE.SALTPETER, ORETYPE.SULFUR, 	 ORETYPE.SYLVITE, ORETYPE.BORAX, 	 ORETYPE.CINNABAR, ORETYPE.GYPSUM, ORETYPE.HALITE, ORETYPE.RUBIES], KEY:'sand/black'},
		{INPUT : SANDS.RED,				RESULTS: [ORETYPE.AMETHYST, ORETYPE.KAOLINITE,  ORETYPE.OPAL, 	   ORETYPE.SALTPETER, ORETYPE.SYLVITE,	 ORETYPE.HALITE], KEY:'sand/red'},
		{INPUT : SANDS.YELLOW,			RESULTS: [ORETYPE.AMETHYST, ORETYPE.KAOLINITE,  ORETYPE.LAPIS,     ORETYPE.OPAL, 	  ORETYPE.SALTPETER, ORETYPE.BORAX,   ORETYPE.HALITE, ORETYPE.RUBIES], KEY:'sand/yellow'},
		{INPUT : SANDS.GREEN,			RESULTS: [ORETYPE.AMETHYST, ORETYPE.KIMBERLITE, ORETYPE.EMERALD,   ORETYPE.GRAPHITE,  ORETYPE.GYPSUM], KEY:'sand/green'},
		{INPUT : SANDS.PINK,			RESULTS: [ORETYPE.AMETHYST, ORETYPE.KAOLINITE,  ORETYPE.OPAL,      ORETYPE.SALTPETER, ORETYPE.SYLVITE,   ORETYPE.BORAX,   ORETYPE.HALITE], KEY:'sand/pink'}
	]

	event.remove({type : RECIPE_TYPE.C_SPLASHING})
	recipes.forEach(recipe=>{	
		let RESULT=[]
		recipe.RESULTS.forEach(res=>{
			if(ORES.RICH[res.NAME]){
				RESULT.push({item : ORES.RICH[res.NAME], 		chance :  res.CHANCE*0.9})
				RESULT.push({item : ORES.NORMAL[res.NAME], 		chance :  res.CHANCE})
				RESULT.push({item : ORES.POOR[res.NAME], 		chance :  res.CHANCE*1.2})
				RESULT.push({item : ORES.SMALL[res.NAME], 		chance :  res.CHANCE*1.5})
			}else{
				RESULT.push({item : ORES.PRECIOUS[res.NAME], 	chance :  res.CHANCE})
			}
		})
		event.custom({
			type: RECIPE_TYPE.C_SPLASHING,
			ingredients: [
				Id_or_tag_to_item(recipe.INPUT)
			],
			results: RESULT
		}).id(`create:splashing/${recipe.KEY}`)
	})
})